{"ast":null,"code":"import isThumbtackUrl from './is-thumbtack-url.js';\n\nvar getRel = function getRel(url) {\n  var shouldOpenInNewTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (shouldOpenInNewTab) {\n    if (isThumbtackUrl(url)) {\n      // There are performance benefits of adding `rel=\"noopener\"`.\n      // https://jakearchibald.com/2016/performance-benefits-of-rel-noopener/\n      return 'noopener';\n    } // https://mathiasbynens.github.io/rel-noopener/\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md\n\n\n    return 'noopener noreferrer';\n  }\n\n  return undefined;\n};\n/**\n * Enable plain and themed `<a>` elements to share the same props.\n */\n\n\nvar getAnchorProps = function getAnchorProps(_ref) {\n  var isDisabled = _ref.isDisabled,\n      shouldOpenInNewTab = _ref.shouldOpenInNewTab,\n      to = _ref.to,\n      onClick = _ref.onClick;\n  return {\n    onClick: onClick,\n    href: isDisabled ? undefined : to,\n    target: shouldOpenInNewTab ? '_blank' : '_self',\n    // NOTE use `noopener` even for internal links in new tabs to prevent potential slowdown of\n    // new tab https://mathiasbynens.github.io/rel-noopener/\n    rel: getRel(to, shouldOpenInNewTab)\n  };\n};\n\nexport default getAnchorProps;","map":{"version":3,"sources":["../../../../components/UIAction/get-anchor-props.ts"],"names":["getRel","shouldOpenInNewTab","isThumbtackUrl","getAnchorProps","isDisabled","to","onClick","href","target","rel"],"mappings":";;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,GAAA,EAAkE;MAAnDC,kBAAmD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA9B,K;;MAC/C,kB,EAAwB;QAChBC,cAAc,CAAlB,GAAkB,C,EAAO;;;aAGrB,U;AAJgB,KAAA,CAAA;;;;WASpB,qB;;;SAGJ,S;AAbJ,CAAA;;;;;;AA0BA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAA;MACnBC,UADmB,GAAA,IAAA,CAAA,U;MAEnBH,kBAFmB,GAAA,IAAA,CAAA,kB;MAGnBI,EAHmB,GAAA,IAAA,CAAA,E;MAInBC,OAJmB,GAAA,IAAA,CAAA,O;SAUH;AAChBA,IAAAA,OAAO,EADS,OAAA;AAEhBC,IAAAA,IAAI,EAAEH,UAAU,GAAA,SAAA,GAFA,EAAA;AAGhBI,IAAAA,MAAM,EAAEP,kBAAkB,GAAA,QAAA,GAHV,OAAA;;;AAMhBQ,IAAAA,GAAG,EAAET,MAAM,CAAA,EAAA,EAAA,kBAAA;AANK,G;AAVpB,CAAA","sourcesContent":["import isThumbtackUrl from './is-thumbtack-url';\n\nconst getRel = (url?: string, shouldOpenInNewTab = false): string | undefined => {\n    if (shouldOpenInNewTab) {\n        if (isThumbtackUrl(url)) {\n            // There are performance benefits of adding `rel=\"noopener\"`.\n            // https://jakearchibald.com/2016/performance-benefits-of-rel-noopener/\n            return 'noopener';\n        }\n\n        // https://mathiasbynens.github.io/rel-noopener/\n        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md\n        return 'noopener noreferrer';\n    }\n\n    return undefined;\n};\n\ninterface AnchorProps {\n    onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n    href?: string;\n    target: string;\n    rel?: string;\n}\n\n/**\n * Enable plain and themed `<a>` elements to share the same props.\n */\nconst getAnchorProps = ({\n    isDisabled,\n    shouldOpenInNewTab,\n    to,\n    onClick,\n}: {\n    isDisabled?: boolean;\n    shouldOpenInNewTab?: boolean;\n    to?: string;\n    onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}): AnchorProps => ({\n    onClick,\n    href: isDisabled ? undefined : to,\n    target: shouldOpenInNewTab ? '_blank' : '_self',\n    // NOTE use `noopener` even for internal links in new tabs to prevent potential slowdown of\n    // new tab https://mathiasbynens.github.io/rel-noopener/\n    rel: getRel(to, shouldOpenInNewTab),\n});\n\nexport default getAnchorProps;\n"]},"metadata":{},"sourceType":"module"}