{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { //signInSuccess,\nsignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { signup, signin, authenticate, isAuthenticated, signout } from \"../../apis\"; // import {\n//   auth,\n//   googleProvider,\n//   createUserProfileDocument,\n//   getCurrentUser\n// } from '../../firebase/firebase.utils';\n// export function* getSnapshotFromUserAuth(userAuth, additionalData) {\n//   try {\n//     const userRef = yield call(\n//       createUserProfileDocument,\n//       userAuth,\n//       additionalData\n//     );\n//     const userSnapshot = yield userRef.get();\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n//   } catch (error) {\n//     yield put(signInFailure(error));\n//   }\n// }\n// export function* signInWithGoogle() {\n//   try {\n//     const { user } = yield auth.signInWithPopup(googleProvider);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error));\n//   }\n// }\n// export function* signInWithEmail({ payload: { email, password } }) {\n//   try {\n//     const { user } = yield signin(email, password);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error));\n//   }\n// }\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield signin(email, password);\n    console.log(user);\n    yield put(authenticate(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} // export function* isUserAuthenticated() {\n//   try {\n//     const userAuth = yield getCurrentUser();\n//     if (!userAuth) return;\n//     yield getSnapshotFromUserAuth(userAuth);\n//   } catch (error) {\n//     yield put(signInFailure(error));\n//   }\n// }\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield isAuthenticated();\n    if (!userAuth) return; //yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} // export function* signOut() {\n//   try {\n//     yield auth.signOut();\n//     yield put(signOutSuccess());\n//   } catch (error) {\n//     yield put(signOutFailure(error));\n//   }\n// }\n\nexport function* signOut() {\n  try {\n    yield signout();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n} // export function* signUp({ payload: { email, password, displayName } }) {\n//   try {\n//     const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n//     yield put(signUpSuccess({ user, additionalData: { displayName } }));\n//   } catch (error) {\n//     yield put(signUpFailure(error));\n//   }\n// }\n\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield signup({\n      displayName,\n      email,\n      password\n    });\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n} // export function* signInAfterSignUp({ payload: { user, additionalData } }) {\n//   yield getSnapshotFromUserAuth(user, additionalData);\n// }\n// export function* onGoogleSignInStart() {\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n// }\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n} // export function* onSignUpSuccess() {\n//   yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n// }\n\nexport function* userSagas() {\n  yield all([//call(onGoogleSignInStart),\n  call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart) //call(onSignUpSuccess),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/Deepak/react_course/covid/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signup","signin","authenticate","isAuthenticated","signout","signInWithEmail","payload","email","password","user","console","log","error","isUserAuthenticated","userAuth","signOut","signUp","displayName","additionalData","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  //signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  signUpSuccess,\r\n  signUpFailure,\r\n} from \"./user.actions\";\r\n\r\nimport {\r\n  signup,\r\n  signin,\r\n  authenticate,\r\n  isAuthenticated,\r\n  signout,\r\n} from \"../../apis\";\r\n\r\n// import {\r\n//   auth,\r\n//   googleProvider,\r\n//   createUserProfileDocument,\r\n//   getCurrentUser\r\n// } from '../../firebase/firebase.utils';\r\n\r\n// export function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n//   try {\r\n//     const userRef = yield call(\r\n//       createUserProfileDocument,\r\n//       userAuth,\r\n//       additionalData\r\n//     );\r\n//     const userSnapshot = yield userRef.get();\r\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n//   } catch (error) {\r\n//     yield put(signInFailure(error));\r\n//   }\r\n// }\r\n\r\n// export function* signInWithGoogle() {\r\n//   try {\r\n//     const { user } = yield auth.signInWithPopup(googleProvider);\r\n//     yield getSnapshotFromUserAuth(user);\r\n//   } catch (error) {\r\n//     yield put(signInFailure(error));\r\n//   }\r\n// }\r\n\r\n// export function* signInWithEmail({ payload: { email, password } }) {\r\n//   try {\r\n//     const { user } = yield signin(email, password);\r\n//     yield getSnapshotFromUserAuth(user);\r\n//   } catch (error) {\r\n//     yield put(signInFailure(error));\r\n//   }\r\n// }\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield signin(email, password);\r\n    console.log(user);\r\n    yield put(authenticate(user));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\n// export function* isUserAuthenticated() {\r\n//   try {\r\n//     const userAuth = yield getCurrentUser();\r\n//     if (!userAuth) return;\r\n//     yield getSnapshotFromUserAuth(userAuth);\r\n//   } catch (error) {\r\n//     yield put(signInFailure(error));\r\n//   }\r\n// }\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield isAuthenticated();\r\n    if (!userAuth) return;\r\n    //yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\n// export function* signOut() {\r\n//   try {\r\n//     yield auth.signOut();\r\n//     yield put(signOutSuccess());\r\n//   } catch (error) {\r\n//     yield put(signOutFailure(error));\r\n//   }\r\n// }\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield signout();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\n// export function* signUp({ payload: { email, password, displayName } }) {\r\n//   try {\r\n//     const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n//     yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n//   } catch (error) {\r\n//     yield put(signUpFailure(error));\r\n//   }\r\n// }\r\n\r\nexport function* signUp({ payload: { displayName, email, password } }) {\r\n  try {\r\n    const { user } = yield signup({ displayName, email, password });\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFailure(error));\r\n  }\r\n}\r\n\r\n// export function* signInAfterSignUp({ payload: { user, additionalData } }) {\r\n//   yield getSnapshotFromUserAuth(user, additionalData);\r\n// }\r\n\r\n// export function* onGoogleSignInStart() {\r\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n// }\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\n// export function* onSignUpSuccess() {\r\n//   yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n// }\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    //call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart),\r\n    //call(onSignUpSuccess),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}