{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak\\\\react_course\\\\covid\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; //import { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport { signup, authenticate, isAuthenticated } from \"../../apis\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    error: \"\",\n    success: false\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials; // const [values, setValues] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   error: \"\",\n  //   success: false,\n  // });\n  //const { name, email, password, error, success } = values;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } //signUpStart({ displayName, email, password });\n\n\n    signup({\n      displayName,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setUserCredentials({ ...userCredentials,\n          error: data.error,\n          success: false\n        });\n      } else {\n        setUserCredentials({ ...userCredentials,\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          error: \"\",\n          success: true\n        });\n      }\n    }).catch(console.log(\"Error in signup\"));\n  };\n\n  const handleChange = event => {\n    const {\n      displayName,\n      value\n    } = event.target; //setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n}; // const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n// });\n// export default connect(null, mapDispatchToProps)(SignUp);\n\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Deepak/react_course/covid/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","SignUpContainer","SignUpTitle","signup","authenticate","isAuthenticated","SignUp","signUpStart","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","error","success","handleSubmit","event","preventDefault","alert","then","data","catch","console","log","handleChange","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\n//import { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\r\nimport { signup, authenticate, isAuthenticated } from \"../../apis\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  // const [values, setValues] = useState({\r\n  //   name: \"\",\r\n  //   email: \"\",\r\n  //   password: \"\",\r\n  //   error: \"\",\r\n  //   success: false,\r\n  // });\r\n\r\n  //const { name, email, password, error, success } = values;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    //signUpStart({ displayName, email, password });\r\n    signup({ displayName, email, password })\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setUserCredentials({\r\n            ...userCredentials,\r\n            error: data.error,\r\n            success: false,\r\n          });\r\n        } else {\r\n          setUserCredentials({\r\n            ...userCredentials,\r\n            displayName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            error: \"\",\r\n            success: true,\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log(\"Error in signup\"));\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { displayName, value } = event.target;\r\n\r\n    //setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(SignUp);\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}